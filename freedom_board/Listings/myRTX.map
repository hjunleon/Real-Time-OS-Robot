Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.auto_obstacle_avoid) refers to main.o(i.just_stoppppp) for just_stoppppp
    main.o(i.auto_obstacle_avoid) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.auto_obstacle_avoid) refers to motor.o(i.create_motor_cmd) for create_motor_cmd
    main.o(i.auto_obstacle_avoid) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.auto_obstacle_avoid) refers to main.o(.data) for motorMQ
    main.o(i.auto_thread) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.auto_thread) refers to ultrasound.o(i.startUltrasound) for startUltrasound
    main.o(i.auto_thread) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.auto_thread) refers to main.o(i.just_stoppppp) for just_stoppppp
    main.o(i.auto_thread) refers to main.o(i.auto_obstacle_avoid) for auto_obstacle_avoid
    main.o(i.auto_thread) refers to motor.o(i.get_move_state) for get_move_state
    main.o(i.auto_thread) refers to motor.o(i.create_motor_cmd) for create_motor_cmd
    main.o(i.auto_thread) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.auto_thread) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.auto_thread) refers to main.o(.data) for autoStartSemaphore
    main.o(i.auto_thread) refers to ultrasound.o(.data) for ultra_dist
    main.o(i.greenLED_thread) refers to motor.o(i.get_move_state) for get_move_state
    main.o(i.greenLED_thread) refers to led.o(i.greenLedMove) for greenLedMove
    main.o(i.greenLED_thread) refers to led.o(i.greenLedStop) for greenLedStop
    main.o(i.handle_UART) refers to uart.o(i.UART2_Receive_Poll) for UART2_Receive_Poll
    main.o(i.handle_UART) refers to main.o(i.get_level) for get_level
    main.o(i.handle_UART) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.handle_UART) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    main.o(i.handle_UART) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.handle_UART) refers to main.o(.data) for isAuto
    main.o(i.just_stoppppp) refers to motor.o(i.create_motor_cmd) for create_motor_cmd
    main.o(i.just_stoppppp) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(i.just_stoppppp) refers to utils.o(i.util_delay) for util_delay
    main.o(i.just_stoppppp) refers to main.o(.data) for motorMQ
    main.o(i.main) refers to system_mkl25z4.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to motor.o(i.initMotor) for initMotor
    main.o(i.main) refers to ultrasound.o(i.initUltrasound) for initUltrasound
    main.o(i.main) refers to uart.o(i.initUART2) for initUART2
    main.o(i.main) refers to led.o(i.initGreenLED) for initGreenLED
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(i.main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(i.main) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(.data) for motorMQ
    main.o(i.main) refers to main.o(.constdata) for uartPriority
    main.o(i.main) refers to main.o(i.handle_UART) for handle_UART
    main.o(i.main) refers to main.o(i.motor_thread) for motor_thread
    main.o(i.main) refers to main.o(i.auto_thread) for auto_thread
    main.o(i.main) refers to main.o(i.greenLED_thread) for greenLED_thread
    main.o(i.motor_thread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(i.motor_thread) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.motor_thread) refers to motor.o(i.set_motors) for set_motors
    main.o(i.motor_thread) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.motor_thread) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.motor_thread) refers to main.o(.data) for motorMQ
    main.o(i.redLED_thread) refers to motor.o(i.get_move_state) for get_move_state
    main.o(i.redLED_thread) refers to led.o(i.redLedMove) for redLedMove
    main.o(i.redLED_thread) refers to led.o(i.redLedStop) for redLedStop
    main.o(i.ultra_thread) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    main.o(i.ultra_thread) refers to main.o(.data) for ultrasonicSemaphore
    uart.o(i.initUART2) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    motor.o(i.calc_left) refers to motor.o(.data) for CUR_TPM1_C0V
    motor.o(i.calc_left_back) refers to motor.o(.data) for CUR_TPM1_C1V
    motor.o(i.calc_right) refers to motor.o(.data) for CUR_TPM0_C0V
    motor.o(i.calc_right_back) refers to motor.o(.data) for CUR_TPM0_C1V
    motor.o(i.get_move_state) refers to motor.o(.data) for f_b_dir
    motor.o(i.just_backward) refers to motor.o(.data) for CUR_TPM1_C1V
    motor.o(i.just_forward) refers to motor.o(.data) for CUR_TPM1_C0V
    motor.o(i.just_stop) refers to motor.o(.data) for CUR_TPM1_C0V
    motor.o(i.set_motors) refers to motor.o(i.just_forward) for just_forward
    motor.o(i.set_motors) refers to motor.o(i.just_backward) for just_backward
    motor.o(i.set_motors) refers to motor.o(i.just_stop) for just_stop
    motor.o(i.set_motors) refers to motor.o(i.calc_left_back) for calc_left_back
    motor.o(i.set_motors) refers to motor.o(i.calc_left) for calc_left
    motor.o(i.set_motors) refers to motor.o(i.calc_right_back) for calc_right_back
    motor.o(i.set_motors) refers to motor.o(i.calc_right) for calc_right
    motor.o(i.set_motors) refers to motor.o(.data) for straight_level
    ultrasound.o(i.PIT_IRQHandler) refers to ultrasound.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    ultrasound.o(i.PIT_IRQHandler) refers to ultrasound.o(i.startMeasure) for startMeasure
    ultrasound.o(i.PIT_IRQHandler) refers to ultrasound.o(i.clearTIF) for clearTIF
    ultrasound.o(i.PIT_IRQHandler) refers to ultrasound.o(.data) for pit_tick
    ultrasound.o(i.TPM2_IRQHandler) refers to ultrasound.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    ultrasound.o(i.TPM2_IRQHandler) refers to ultrasound.o(i.getDistance) for getDistance
    ultrasound.o(i.disablePIT) refers to ultrasound.o(i.clearTIF) for clearTIF
    ultrasound.o(i.disablePIT) refers to ultrasound.o(i.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    ultrasound.o(i.disableTPM2) refers to ultrasound.o(i.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    ultrasound.o(i.disableTPM2) refers to ultrasound.o(i.stopTPM2) for stopTPM2
    ultrasound.o(i.disableTPM2) refers to ultrasound.o(i.resetTPM2) for resetTPM2
    ultrasound.o(i.getDistance) refers to ultrasound.o(i.stopTPM2) for stopTPM2
    ultrasound.o(i.getDistance) refers to ultrasound.o(i.resetTPM2) for resetTPM2
    ultrasound.o(i.getDistance) refers to ultrasound.o(i.startTPM2) for startTPM2
    ultrasound.o(i.getDistance) refers to ultrasound.o(i.getTPMC1Value) for getTPMC1Value
    ultrasound.o(i.getDistance) refers to ultrasound.o(i.timeToDistance) for timeToDistance
    ultrasound.o(i.getDistance) refers to ultrasound.o(.data) for echo_is_on
    ultrasound.o(i.getUltraDist) refers to ultrasound.o(.data) for ultra_dist
    ultrasound.o(i.initEcho) refers to ultrasound.o(i.initTPM2) for initTPM2
    ultrasound.o(i.initPIT) refers to ultrasound.o(i.clearTIF) for clearTIF
    ultrasound.o(i.initPIT) refers to ultrasound.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    ultrasound.o(i.initPIT) refers to ultrasound.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    ultrasound.o(i.initPIT) refers to ultrasound.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ultrasound.o(i.initPIT) refers to ultrasound.o(.data) for pit_ldval
    ultrasound.o(i.initTPM2) refers to ultrasound.o(i.startTPM2) for startTPM2
    ultrasound.o(i.initTPM2) refers to ultrasound.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    ultrasound.o(i.initTPM2) refers to ultrasound.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    ultrasound.o(i.initTPM2) refers to ultrasound.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    ultrasound.o(i.initUltrasound) refers to ultrasound.o(i.initEcho) for initEcho
    ultrasound.o(i.initUltrasound) refers to ultrasound.o(i.initTrigger) for initTrigger
    ultrasound.o(i.startMeasure) refers to ultrasound.o(i.stopTPM2) for stopTPM2
    ultrasound.o(i.startMeasure) refers to ultrasound.o(i.resetTPM2) for resetTPM2
    ultrasound.o(i.startMeasure) refers to ultrasound.o(i.startTPM2) for startTPM2
    ultrasound.o(i.startUltrasound) refers to ultrasound.o(i.initPIT) for initPIT
    ultrasound.o(i.stopUltrasound) refers to ultrasound.o(i.disablePIT) for disablePIT
    ultrasound.o(i.timeToDistance) refers to dflti.o(.text) for __aeabi_ui2d
    ultrasound.o(i.timeToDistance) refers to dmul.o(.text) for __aeabi_dmul
    ultrasound.o(i.timeToDistance) refers to dfixui.o(.text) for __aeabi_d2uiz
    ultrasound.o(i.timeToDistance) refers to ultrasound.o(.data) for ultra_dist
    led.o(i.greenLedMove) refers to rtx_delay.o(.text.osDelay) for osDelay
    led.o(i.greenLedMove) refers to led.o(.data) for i
    led.o(i.redLedMove) refers to rtx_delay.o(.text.osDelay) for osDelay
    led.o(i.redLedStop) refers to rtx_delay.o(.text.osDelay) for osDelay
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(i.osRtxErrorNotify) refers to rtx_config.o(i.__ARM_common_switch8) for __ARM_common_switch8
    startup_mkl25z4.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(STACK) for __initial_sp
    startup_mkl25z4.o(RESET) refers to startup_mkl25z4.o(.text) for Reset_Handler
    startup_mkl25z4.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_mkl25z4.o(RESET) refers to ultrasound.o(i.TPM2_IRQHandler) for TPM2_IRQHandler
    startup_mkl25z4.o(RESET) refers to ultrasound.o(i.PIT_IRQHandler) for PIT_IRQHandler
    startup_mkl25z4.o(.ARM.__at_0x400) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_mkl25z4.o(.text) refers to system_mkl25z4.o(i.SystemInit) for SystemInit
    startup_mkl25z4.o(.text) refers to __main.o(!!!main) for __main
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(HEAP) for Heap_Mem
    startup_mkl25z4.o(.text) refers to startup_mkl25z4.o(STACK) for Stack_Mem
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to rtx_config.o(i.__ARM_common_switch8) for __ARM_common_switch8
    system_mkl25z4.o(i.SystemCoreClockUpdate) refers to system_mkl25z4.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm0.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    os_systick.o(.text.OS_Tick_Setup) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mkl25z4.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    dfixui.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflti.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_mkl25z4.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(i.end), (4 bytes).
    Removing main.o(i.redLED_thread), (24 bytes).
    Removing main.o(i.start), (4 bytes).
    Removing main.o(i.ultra_thread), (20 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing utils.o(.rev16_text), (4 bytes).
    Removing utils.o(.revsh_text), (4 bytes).
    Removing motor.o(.rev16_text), (4 bytes).
    Removing motor.o(.revsh_text), (4 bytes).
    Removing motor.o(i.disable_motor), (84 bytes).
    Removing ultrasound.o(.rev16_text), (4 bytes).
    Removing ultrasound.o(.revsh_text), (4 bytes).
    Removing ultrasound.o(i.__NVIC_DisableIRQ), (56 bytes).
    Removing ultrasound.o(i.disablePIT), (32 bytes).
    Removing ultrasound.o(i.disableTPM2), (18 bytes).
    Removing ultrasound.o(i.getUltraDist), (12 bytes).
    Removing ultrasound.o(i.offTrigger), (20 bytes).
    Removing ultrasound.o(i.onTrigger), (20 bytes).
    Removing ultrasound.o(i.stopUltrasound), (8 bytes).
    Removing led.o(.rev16_text), (4 bytes).
    Removing led.o(.revsh_text), (4 bytes).
    Removing led.o(i.initRedLED), (80 bytes).
    Removing led.o(i.redLedMove), (60 bytes).
    Removing led.o(i.redLedStop), (56 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (88 bytes).
    Removing rtx_lib.o(.bss.os.libspace), (496 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing system_mkl25z4.o(.rev16_text), (4 bytes).
    Removing system_mkl25z4.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (56 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (136 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (18 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (58 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (96 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (32 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (18 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (48 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (40 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (18 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (96 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (40 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (18 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (162 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (18 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (444 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (40 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (18 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (64 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (112 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (40 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

366 unused section(s) (total 8710 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mkl25z4.o(RESET)
    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/cfplib/fflt.c                   0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    C:\Users\facestomperx\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\facestomperx\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.6.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    LED\\led.c                               0x00000000   Number         0  led.o ABSOLUTE
    LED\led.c                                0x00000000   Number         0  led.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\startup_MKL25Z4.s 0x00000000   Number         0  startup_mkl25z4.o ABSOLUTE
    RTE\Device\MKL25Z128xxx4\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\MKL25Z128xxx4\\system_MKL25Z4.c 0x00000000   Number         0  system_mkl25z4.o ABSOLUTE
    UART\\uart.c                             0x00000000   Number         0  uart.o ABSOLUTE
    UART\uart.c                              0x00000000   Number         0  uart.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor\\motor.c                           0x00000000   Number         0  motor.o ABSOLUTE
    motor\motor.c                            0x00000000   Number         0  motor.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ultrasound\\ultrasound.c                 0x00000000   Number         0  ultrasound.o ABSOLUTE
    ultrasound\ultrasound.c                  0x00000000   Number         0  ultrasound.o ABSOLUTE
    utils.c                                  0x00000000   Number         0  utils.o ABSOLUTE
    utils.c                                  0x00000000   Number         0  utils.o ABSOLUTE
    !!!main                                  0x000000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x000000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_zi                             0x00000104   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000120   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000122   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x00000122   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x00000124   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000126   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000126   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000128   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000128   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000128   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0000012e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x00000136   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0000013a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0000013a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000142   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000144   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000144   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000148   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x00000150   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x00000188   Section       64  startup_mkl25z4.o(.text)
    .text                                    0x000001c8   Section      164  irq_cm0.o(.text)
    .text                                    0x0000026c   Section        0  rt_memcpy.o(.text)
    .text                                    0x000002ee   Section        0  rt_memclr.o(.text)
    .text                                    0x0000032e   Section        0  heapauxi.o(.text)
    .text                                    0x00000334   Section        0  dfixui.o(.text)
    .text                                    0x0000037c   Section        0  dflti.o(.text)
    .text                                    0x000003d4   Section        0  exit.o(.text)
    .text                                    0x000003e4   Section        8  libspace.o(.text)
    .text                                    0x000003ec   Section        0  sys_exit.o(.text)
    .text                                    0x000003f8   Section        2  use_no_semi.o(.text)
    [Anonymous Symbol]                       0x000003fa   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    .text                                    0x000003fa   Section        0  indicate_semi.o(.text)
    .ARM.__at_0x400                          0x00000400   Section       16  startup_mkl25z4.o(.ARM.__at_0x400)
    .text                                    0x00000410   Section      346  aeabi_sdiv.o(.text)
    .text                                    0x0000056c   Section        0  dmul.o(.text)
    .text                                    0x000007b4   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x000007f2   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x0000082c   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x0000082d   Thumb Code    76  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x00000878   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x00000879   Thumb Code    98  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x000008da   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x000008db   Thumb Code    30  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x000008f8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x00000900   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x00000904   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x00000924   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x00000928   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x0000092c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x00000930   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x0000096c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x00000970   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x00000974   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x00000978   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x0000097c   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenDecrement                  0x0000097d   Thumb Code    36  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x000009a0   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SemaphoreTokenIncrement                  0x000009a1   Thumb Code    38  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x000009c6   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x000009c7   Thumb Code    78  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000a14   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00000a15   Thumb Code    76  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x00000a5c   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x00000a60   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x00000a84   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x00000a88   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_0                             0x00000ab0   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.4_1                             0x00000ab4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00000ab8   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.1_0                             0x00000adc   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00000ae0   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.6_0                             0x00000b00   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000b04   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x00000b74   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000b78   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x00000b98   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00000b9c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000c10   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000c14   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00000c38   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000c3c   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.6_0                             0x00000c60   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x00000c64   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.1_0                             0x00000c84   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x00000c88   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00000cac   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x00000cb0   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x00000cb2   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00000d2e   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000d7c   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000dae   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000ddc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000e16   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000e54   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000e55   Thumb Code   188  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00000f10   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00000f54   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00000fd0   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00000fd4   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x00001038   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x0000103c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00001040   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxSemaphorePostProcess                0x00001041   Thumb Code    36  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x00001064   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00001065   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00001098   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0000109c   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x0000109d   Thumb Code   128  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x00001118   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x0000111c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x0000111d   Thumb Code    68  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x0000115c   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00001160   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x00001194   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00001198   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x000011e4   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x000011e8   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x000011e9   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x00001238   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0000123c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00001250   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0000127c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00001294   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x000012ba   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x000012bb   Thumb Code    38  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x000012e0   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x000012f4   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x000012f8   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00001300   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x00001324   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x00001328   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x0000132c   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x0000135c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x00001360   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x00001364   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x00001368   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x0000136c   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x0000137c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00001380   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x000013b8   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x000013bc   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x000013e0   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00001450   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00001454   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001484   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001488   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x0000148c   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x00001490   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x00001491   Thumb Code    96  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x000014ec   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x000014f0   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.2_0                             0x00001530   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x00001534   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.0_0                             0x00001554   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x00001558   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.3_0                             0x000015a0   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x000015a4   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x000015ac   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x000015b0   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x000015d0   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x000015d4   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x000015d5   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x000015e8   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x000015e9   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.5_0                             0x000015f0   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x000015f4   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x000015f5   Thumb Code   328  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_0                            0x00001730   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_1                            0x00001734   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.20_2                            0x00001738   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0000173c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x0000173d   Thumb Code   132  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_0                            0x000017b0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_1                            0x000017b4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_2                            0x000017b8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.21_3                            0x000017bc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x000017c0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x000017c1   Thumb Code   232  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x000018a4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000018a8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x000018a9   Thumb Code   484  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x00001a74   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x00001a78   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_2                            0x00001a7c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_3                            0x00001a80   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_4                            0x00001a84   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_5                            0x00001a88   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00001a8c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x00001a8d   Thumb Code   188  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x00001b44   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00001b48   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x00001b49   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001bdc   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001be0   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x00001be1   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.12_0                            0x00001c98   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x00001c9c   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x00001c9d   Thumb Code   112  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.7_0                             0x00001d08   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x00001d0c   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001d0d   Thumb Code   192  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00001dc8   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001dcc   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreAcquire                   0x00001dcd   Thumb Code    76  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.11_0                            0x00001e14   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x00001e18   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreNew                       0x00001e19   Thumb Code   136  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_0                             0x00001e94   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_1                             0x00001e98   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.7_2                             0x00001e9c   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x00001ea0   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxSemaphoreRelease                   0x00001ea1   Thumb Code    56  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x00001ed8   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001ed9   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001f40   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x00001f44   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x00001f45   Thumb Code   492  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00002118   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x0000211c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00002120   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00002124   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00002128   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_5                            0x0000212c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.PIT_IRQHandler                         0x00002130   Section        0  ultrasound.o(i.PIT_IRQHandler)
    i.SystemCoreClockUpdate                  0x00002160   Section        0  system_mkl25z4.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x000022f0   Section        0  system_mkl25z4.o(i.SystemInit)
    i.TPM2_IRQHandler                        0x000022fc   Section        0  ultrasound.o(i.TPM2_IRQHandler)
    i.UART2_Receive_Poll                     0x00002334   Section        0  uart.o(i.UART2_Receive_Poll)
    i.__ARM_common_switch8                   0x0000234c   Section        0  rtx_config.o(i.__ARM_common_switch8)
    i.__NVIC_ClearPendingIRQ                 0x00002368   Section        0  ultrasound.o(i.__NVIC_ClearPendingIRQ)
    __NVIC_ClearPendingIRQ                   0x00002369   Thumb Code    18  ultrasound.o(i.__NVIC_ClearPendingIRQ)
    i.__NVIC_EnableIRQ                       0x00002380   Section        0  ultrasound.o(i.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x00002381   Thumb Code    26  ultrasound.o(i.__NVIC_EnableIRQ)
    i.__NVIC_SetPriority                     0x000023a0   Section        0  ultrasound.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x000023a1   Thumb Code   110  ultrasound.o(i.__NVIC_SetPriority)
    i._mutex_acquire                         0x00002418   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x00002419   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x00002430   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x00002431   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x0000243c   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x0000243d   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x00002460   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x00002461   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x00002474   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.auto_obstacle_avoid                    0x0000247c   Section        0  main.o(i.auto_obstacle_avoid)
    i.auto_thread                            0x0000259c   Section        0  main.o(i.auto_thread)
    i.calc_left                              0x000026a8   Section        0  motor.o(i.calc_left)
    i.calc_left_back                         0x00002714   Section        0  motor.o(i.calc_left_back)
    i.calc_right                             0x00002780   Section        0  motor.o(i.calc_right)
    i.calc_right_back                        0x000027ec   Section        0  motor.o(i.calc_right_back)
    i.clearTIF                               0x00002858   Section        0  ultrasound.o(i.clearTIF)
    i.create_motor_cmd                       0x0000286c   Section        0  motor.o(i.create_motor_cmd)
    i.getDistance                            0x000028a0   Section        0  ultrasound.o(i.getDistance)
    i.getTPMC1Value                          0x000028d8   Section        0  ultrasound.o(i.getTPMC1Value)
    i.get_level                              0x000028e4   Section        0  main.o(i.get_level)
    i.get_move_state                         0x00002918   Section        0  motor.o(i.get_move_state)
    i.greenLED_thread                        0x00002938   Section        0  main.o(i.greenLED_thread)
    i.greenLedMove                           0x00002950   Section        0  led.o(i.greenLedMove)
    i.greenLedStop                           0x000029c0   Section        0  led.o(i.greenLedStop)
    i.handle_UART                            0x000029e4   Section        0  main.o(i.handle_UART)
    i.initEcho                               0x00002b24   Section        0  ultrasound.o(i.initEcho)
    i.initGreenLED                           0x00002b2c   Section        0  led.o(i.initGreenLED)
    i.initMotor                              0x00002c70   Section        0  motor.o(i.initMotor)
    i.initPIT                                0x00002dc0   Section        0  ultrasound.o(i.initPIT)
    i.initTPM2                               0x00002e64   Section        0  ultrasound.o(i.initTPM2)
    i.initTrigger                            0x00002f50   Section        0  ultrasound.o(i.initTrigger)
    i.initUART2                              0x00002f94   Section        0  uart.o(i.initUART2)
    i.initUltrasound                         0x00003014   Section        0  ultrasound.o(i.initUltrasound)
    i.just_backward                          0x00003020   Section        0  motor.o(i.just_backward)
    i.just_forward                           0x0000305c   Section        0  motor.o(i.just_forward)
    i.just_stop                              0x00003094   Section        0  motor.o(i.just_stop)
    i.just_stoppppp                          0x000030c4   Section        0  main.o(i.just_stoppppp)
    i.main                                   0x0000310c   Section        0  main.o(i.main)
    i.motor_thread                           0x000031bc   Section        0  main.o(i.motor_thread)
    i.osRtxErrorNotify                       0x000031fc   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0000321c   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x00003220   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x00003221   Thumb Code    30  rtx_lib.o(i.os_kernel_is_active)
    i.resetTPM2                              0x00003244   Section        0  ultrasound.o(i.resetTPM2)
    i.set_motors                             0x00003250   Section        0  motor.o(i.set_motors)
    i.startMeasure                           0x000033a8   Section        0  ultrasound.o(i.startMeasure)
    i.startTPM2                              0x000033d4   Section        0  ultrasound.o(i.startTPM2)
    i.startUltrasound                        0x000033e8   Section        0  ultrasound.o(i.startUltrasound)
    i.stopTPM2                               0x000033f0   Section        0  ultrasound.o(i.stopTPM2)
    i.timeToDistance                         0x00003404   Section        0  ultrasound.o(i.timeToDistance)
    i.util_delay                             0x00003430   Section        0  utils.o(i.util_delay)
    .constdata                               0x00003444   Section      180  main.o(.constdata)
    x$fpl$usenofp                            0x00003444   Section        0  usenofp.o(x$fpl$usenofp)
    .constdata                               0x000034f8   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x000034f8   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x0000351c   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00003540   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x0000355c   Section        1  irq_cm0.o(.constdata)
    .rodata                                  0x00003560   Section      160  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00003560   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x000035c8   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00003600   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00003600   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x1ffff000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x1ffff000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20000000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20000040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20000040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20000074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20000074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200000c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200000c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20000108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20000150   Section      512  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20000150   Data         256  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20000250   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x20000350   Section       44  main.o(.data)
    .data                                    0x2000037c   Section       20  motor.o(.data)
    .data                                    0x20000390   Section       16  ultrasound.o(.data)
    .data                                    0x200003a0   Section       44  led.o(.data)
    .data                                    0x200003cc   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x200003d0   Data           1  rtx_lib.o(.data)
    .data                                    0x200003d4   Section        4  system_mkl25z4.o(.data)
    .bss                                     0x2000047c   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x200004dc   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x200004dc   Data           1  os_systick.o(.bss.PendST)
    HEAP                                     0x200004e0   Section        0  startup_mkl25z4.o(HEAP)
    STACK                                    0x200004e0   Section      256  startup_mkl25z4.o(STACK)
    Heap_Mem                                 0x200004e0   Data           0  startup_mkl25z4.o(HEAP)
    Stack_Mem                                0x200004e0   Data         256  startup_mkl25z4.o(STACK)
    __initial_sp                             0x200005e0   Data           0  startup_mkl25z4.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mkl25z4.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mkl25z4.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mkl25z4.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x000000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x000000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x000000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_zeroinit                   0x00000105   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000121   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x00000123   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x00000125   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000127   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000129   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000129   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000129   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0000012f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x00000137   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0000013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0000013b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x00000143   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000145   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000145   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000149   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x00000151   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x00000151   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x00000189   Thumb Code    12  startup_mkl25z4.o(.text)
    NMI_Handler                              0x00000195   Thumb Code     2  startup_mkl25z4.o(.text)
    HardFault_Handler                        0x00000197   Thumb Code     2  startup_mkl25z4.o(.text)
    ADC0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    CMP0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DAC0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA2_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DMA3_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    DefaultISR                               0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    FTFA_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    I2C1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LLWU_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LPTMR0_IRQHandler                        0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    LVD_LVW_IRQHandler                       0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    MCG_IRQHandler                           0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTA_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    PORTD_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_IRQHandler                           0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    RTC_Seconds_IRQHandler                   0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved20_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved39_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    Reserved45_IRQHandler                    0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    SPI1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TPM1_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    TSI0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    UART0_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    UART1_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    UART2_IRQHandler                         0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    USB0_IRQHandler                          0x0000019f   Thumb Code     0  startup_mkl25z4.o(.text)
    __user_initial_stackheap                 0x000001a5   Thumb Code     0  startup_mkl25z4.o(.text)
    SVC_Handler                              0x000001c9   Thumb Code   132  irq_cm0.o(.text)
    PendSV_Handler                           0x0000024d   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x00000259   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_memcpy                           0x0000026d   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x0000026d   Thumb Code     0  rt_memcpy.o(.text)
    _memset_w                                0x000002ef   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x00000309   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x00000327   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x00000327   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0000032b   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x0000032b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x0000032b   Thumb Code     4  rt_memclr.o(.text)
    __use_two_region_memory                  0x0000032f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000331   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000333   Thumb Code     2  heapauxi.o(.text)
    __aeabi_d2uiz                            0x00000335   Thumb Code     0  dfixui.o(.text)
    _dfixu                                   0x00000335   Thumb Code    68  dfixui.o(.text)
    __aeabi_i2d_normalise                    0x0000037d   Thumb Code    66  dflti.o(.text)
    __aeabi_i2d                              0x000003bf   Thumb Code    16  dflti.o(.text)
    _dflt                                    0x000003bf   Thumb Code     0  dflti.o(.text)
    __aeabi_ui2d                             0x000003cf   Thumb Code     6  dflti.o(.text)
    _dfltu                                   0x000003cf   Thumb Code     0  dflti.o(.text)
    exit                                     0x000003d5   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x000003e5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000003e5   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000003ed   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000003f9   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000003f9   Thumb Code     2  use_no_semi.o(.text)
    OS_Tick_GetIRQn                          0x000003fb   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    __semihosting_library_function           0x000003fb   Thumb Code     0  indicate_semi.o(.text)
    __aeabi_uidiv                            0x00000411   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x00000411   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x00000425   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x00000425   Thumb Code   326  aeabi_sdiv.o(.text)
    __aeabi_dmul                             0x0000056d   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x0000056d   Thumb Code   558  dmul.o(.text)
    __user_setup_stackheap                   0x000007b5   Thumb Code    62  sys_stackheap_outer.o(.text)
    __decompress                             0x000007f3   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x000007f3   Thumb Code    58  __dczerorl.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x000008f9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x00000905   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_Setup                            0x00000931   Thumb Code    76  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x00000a61   Thumb Code    40  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x00000a89   Thumb Code    48  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x00000ab9   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00000ae1   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000b05   Thumb Code   116  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00000b79   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00000b9d   Thumb Code   120  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000c15   Thumb Code    40  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x00000c3d   Thumb Code    40  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x00000c65   Thumb Code    36  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x00000c89   Thumb Code    40  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelPreInit                       0x00000cb1   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x00000cb3   Thumb Code   124  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00000d2f   Thumb Code    78  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000d7d   Thumb Code    50  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000daf   Thumb Code    46  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000ddd   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000e17   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00000f11   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00000f55   Thumb Code   128  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00000fd5   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00001161   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00001199   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x0000123d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00001251   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0000127d   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00001295   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x000012e1   Thumb Code    24  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x000012f9   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x00001301   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x0000132d   Thumb Code    64  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x0000136d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00001381   Thumb Code    60  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x000013bd   Thumb Code    34  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x000013e1   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x00001455   Thumb Code    60  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x000014f1   Thumb Code    68  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x00001535   Thumb Code    36  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x00001559   Thumb Code    76  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x000015a5   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x000015b1   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    PIT_IRQHandler                           0x00002131   Thumb Code    40  ultrasound.o(i.PIT_IRQHandler)
    SystemCoreClockUpdate                    0x00002161   Thumb Code   372  system_mkl25z4.o(i.SystemCoreClockUpdate)
    SystemInit                               0x000022f1   Thumb Code     8  system_mkl25z4.o(i.SystemInit)
    TPM2_IRQHandler                          0x000022fd   Thumb Code    52  ultrasound.o(i.TPM2_IRQHandler)
    UART2_Receive_Poll                       0x00002335   Thumb Code    20  uart.o(i.UART2_Receive_Poll)
    __ARM_common_switch8                     0x0000234d   Thumb Code    28  rtx_config.o(i.__ARM_common_switch8)
    _mutex_acquire                           0x00002419   Thumb Code    24  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x00002431   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x0000243d   Thumb Code    36  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x00002461   Thumb Code    20  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x00002475   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    auto_obstacle_avoid                      0x0000247d   Thumb Code   278  main.o(i.auto_obstacle_avoid)
    auto_thread                              0x0000259d   Thumb Code   228  main.o(i.auto_thread)
    calc_left                                0x000026a9   Thumb Code    80  motor.o(i.calc_left)
    calc_left_back                           0x00002715   Thumb Code    80  motor.o(i.calc_left_back)
    calc_right                               0x00002781   Thumb Code    80  motor.o(i.calc_right)
    calc_right_back                          0x000027ed   Thumb Code    80  motor.o(i.calc_right_back)
    clearTIF                                 0x00002859   Thumb Code    16  ultrasound.o(i.clearTIF)
    create_motor_cmd                         0x0000286d   Thumb Code    52  motor.o(i.create_motor_cmd)
    getDistance                              0x000028a1   Thumb Code    52  ultrasound.o(i.getDistance)
    getTPMC1Value                            0x000028d9   Thumb Code     6  ultrasound.o(i.getTPMC1Value)
    get_level                                0x000028e5   Thumb Code    50  main.o(i.get_level)
    get_move_state                           0x00002919   Thumb Code    24  motor.o(i.get_move_state)
    greenLED_thread                          0x00002939   Thumb Code    24  main.o(i.greenLED_thread)
    greenLedMove                             0x00002951   Thumb Code    96  led.o(i.greenLedMove)
    greenLedStop                             0x000029c1   Thumb Code    26  led.o(i.greenLedStop)
    handle_UART                              0x000029e5   Thumb Code   304  main.o(i.handle_UART)
    initEcho                                 0x00002b25   Thumb Code     8  ultrasound.o(i.initEcho)
    initGreenLED                             0x00002b2d   Thumb Code   306  led.o(i.initGreenLED)
    initMotor                                0x00002c71   Thumb Code   314  motor.o(i.initMotor)
    initPIT                                  0x00002dc1   Thumb Code   148  ultrasound.o(i.initPIT)
    initTPM2                                 0x00002e65   Thumb Code   220  ultrasound.o(i.initTPM2)
    initTrigger                              0x00002f51   Thumb Code    54  ultrasound.o(i.initTrigger)
    initUART2                                0x00002f95   Thumb Code   116  uart.o(i.initUART2)
    initUltrasound                           0x00003015   Thumb Code    12  ultrasound.o(i.initUltrasound)
    just_backward                            0x00003021   Thumb Code    34  motor.o(i.just_backward)
    just_forward                             0x0000305d   Thumb Code    32  motor.o(i.just_forward)
    just_stop                                0x00003095   Thumb Code    26  motor.o(i.just_stop)
    just_stoppppp                            0x000030c5   Thumb Code    64  main.o(i.just_stoppppp)
    main                                     0x0000310d   Thumb Code   128  main.o(i.main)
    motor_thread                             0x000031bd   Thumb Code    54  main.o(i.motor_thread)
    osRtxErrorNotify                         0x000031fd   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0000321d   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    resetTPM2                                0x00003245   Thumb Code     8  ultrasound.o(i.resetTPM2)
    set_motors                               0x00003251   Thumb Code   306  motor.o(i.set_motors)
    startMeasure                             0x000033a9   Thumb Code    40  ultrasound.o(i.startMeasure)
    startTPM2                                0x000033d5   Thumb Code    14  ultrasound.o(i.startTPM2)
    startUltrasound                          0x000033e9   Thumb Code     8  ultrasound.o(i.startUltrasound)
    stopTPM2                                 0x000033f1   Thumb Code    14  ultrasound.o(i.stopTPM2)
    timeToDistance                           0x00003405   Thumb Code    30  ultrasound.o(i.timeToDistance)
    util_delay                               0x00003431   Thumb Code    20  utils.o(i.util_delay)
    __I$use$fp                               0x00003444   Number         0  usenofp.o(x$fpl$usenofp)
    uartPriority                             0x00003444   Data          36  main.o(.constdata)
    motorPriority                            0x00003468   Data          36  main.o(.constdata)
    autoPriority                             0x0000348c   Data          36  main.o(.constdata)
    ultraPriority                            0x000034b0   Data          36  main.o(.constdata)
    greenPriority                            0x000034d4   Data          36  main.o(.constdata)
    osRtxUserSVC                             0x00003558   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x0000355c   Data           1  irq_cm0.o(.constdata)
    osRtxConfig                              0x00003560   Data         104  rtx_lib.o(.rodata)
    os_cb_sections                           0x000035c8   Data          56  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x0000360c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000362c   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20000040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20000074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200000c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000014c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    isAuto                                   0x20000350   Data           4  main.o(.data)
    isFirstObstacle                          0x20000354   Data           4  main.o(.data)
    isSecondObstacle                         0x20000358   Data           4  main.o(.data)
    cur_distance                             0x2000035c   Data           4  main.o(.data)
    state                                    0x20000360   Data           4  main.o(.data)
    low_ultra_dist_counts                    0x20000364   Data           4  main.o(.data)
    motorMQ                                  0x20000368   Data           4  main.o(.data)
    motorMutex                               0x2000036c   Data           4  main.o(.data)
    autoStopSemaphore                        0x20000370   Data           4  main.o(.data)
    autoStartSemaphore                       0x20000374   Data           4  main.o(.data)
    ultrasonicSemaphore                      0x20000378   Data           4  main.o(.data)
    straight_level                           0x2000037c   Data           1  motor.o(.data)
    side_level                               0x2000037d   Data           1  motor.o(.data)
    f_b_dir                                  0x2000037e   Data           1  motor.o(.data)
    l_r_dir                                  0x2000037f   Data           1  motor.o(.data)
    CUR_TPM1_C0V                             0x20000380   Data           4  motor.o(.data)
    CUR_TPM1_C1V                             0x20000384   Data           4  motor.o(.data)
    CUR_TPM0_C1V                             0x20000388   Data           4  motor.o(.data)
    CUR_TPM0_C0V                             0x2000038c   Data           4  motor.o(.data)
    ultra_dist                               0x20000390   Data           4  ultrasound.o(.data)
    pit_tick                                 0x20000394   Data           4  ultrasound.o(.data)
    echo_is_on                               0x20000398   Data           4  ultrasound.o(.data)
    pit_ldval                                0x2000039c   Data           4  ultrasound.o(.data)
    greenPins                                0x200003a0   Data          40  led.o(.data)
    i                                        0x200003c8   Data           4  led.o(.data)
    irqRtxLibRef                             0x200003cc   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x200003d4   Data           4  system_mkl25z4.o(.data)
    osRtxInfo                                0x200003d8   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x2000047c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200004dc   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000189

  Load Region LR_1 (Base: 0x00000000, Size: 0x00004aa8, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00003680])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000362c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          632    RESET               startup_mkl25z4.o
    0x000000c0   0x000000c0   0x00000008   Code   RO         1189  * !!!main             c_p.l(__main.o)
    0x000000c8   0x000000c8   0x0000003c   Code   RO         1365    !!!scatter          c_p.l(__scatter.o)
    0x00000104   0x00000104   0x0000001c   Code   RO         1367    !!handler_zi        c_p.l(__scatter_zi.o)
    0x00000120   0x00000120   0x00000002   Code   RO         1232    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1246    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1248    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1251    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1253    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1255    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1258    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1260    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1262    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1264    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1266    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1268    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1270    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1272    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1274    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1276    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1278    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1282    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1284    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1286    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000000   Code   RO         1288    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x00000122   0x00000122   0x00000002   Code   RO         1289    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x00000124   0x00000124   0x00000002   Code   RO         1320    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1346    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1348    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1351    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1354    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1356    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000000   Code   RO         1359    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x00000126   0x00000126   0x00000002   Code   RO         1360    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1197    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x00000128   0x00000128   0x00000000   Code   RO         1204    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x00000128   0x00000128   0x00000006   Code   RO         1216    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0000012e   0x0000012e   0x00000008   Code   RO         1205    .ARM.Collect$$rtentry$$00000008  c_p.l(__rtentry2.o)
    0x00000136   0x00000136   0x00000004   Code   RO         1207    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0000013a   0x0000013a   0x00000000   Code   RO         1209    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0000013a   0x0000013a   0x00000008   Code   RO         1210    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x00000142   0x00000142   0x00000002   Code   RO         1237    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x00000144   0x00000144   0x00000000   Code   RO         1293    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x00000144   0x00000144   0x00000004   Code   RO         1294    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x00000148   0x00000148   0x00000006   Code   RO         1295    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0000014e   0x0000014e   0x00000002   PAD
    0x00000150   0x00000150   0x00000038   Code   RO         1177    .emb_text           c_p.l(rt_memcpy.o)
    0x00000188   0x00000188   0x00000040   Code   RO          634  * .text               startup_mkl25z4.o
    0x000001c8   0x000001c8   0x000000a4   Code   RO         1019    .text               RTX_CM0.lib(irq_cm0.o)
    0x0000026c   0x0000026c   0x00000082   Code   RO         1178    .text               c_p.l(rt_memcpy.o)
    0x000002ee   0x000002ee   0x00000040   Code   RO         1181    .text               c_p.l(rt_memclr.o)
    0x0000032e   0x0000032e   0x00000006   Code   RO         1187    .text               c_p.l(heapauxi.o)
    0x00000334   0x00000334   0x00000048   Code   RO         1191    .text               fz_ps.l(dfixui.o)
    0x0000037c   0x0000037c   0x00000058   Code   RO         1193    .text               fz_ps.l(dflti.o)
    0x000003d4   0x000003d4   0x00000010   Code   RO         1223    .text               c_p.l(exit.o)
    0x000003e4   0x000003e4   0x00000008   Code   RO         1233    .text               c_p.l(libspace.o)
    0x000003ec   0x000003ec   0x0000000c   Code   RO         1290    .text               c_p.l(sys_exit.o)
    0x000003f8   0x000003f8   0x00000002   Code   RO         1309    .text               c_p.l(use_no_semi.o)
    0x000003fa   0x000003fa   0x00000000   Code   RO         1311    .text               c_p.l(indicate_semi.o)
    0x000003fa   0x000003fa   0x00000006   Code   RO         1156    .text.OS_Tick_GetIRQn  RTX_CM0.lib(os_systick.o)
    0x00000400   0x00000400   0x00000010   Code   RO          633    .ARM.__at_0x400     startup_mkl25z4.o
    0x00000410   0x00000410   0x0000015a   Code   RO         1183    .text               c_p.l(aeabi_sdiv.o)
    0x0000056a   0x0000056a   0x00000002   PAD
    0x0000056c   0x0000056c   0x00000248   Code   RO         1195    .text               fz_ps.l(dmul.o)
    0x000007b4   0x000007b4   0x0000003e   Code   RO         1220    .text               c_p.l(sys_stackheap_outer.o)
    0x000007f2   0x000007f2   0x0000003a   Code   RO         1363    .text               c_p.l(__dczerorl.o)
    0x0000082c   0x0000082c   0x0000004c   Code   RO         1002    .text.MessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000878   0x00000878   0x00000062   Code   RO          996    .text.MessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x000008da   0x000008da   0x0000001e   Code   RO          994    .text.MessageQueueRemove  RTX_CM0.lib(rtx_msgqueue.o)
    0x000008f8   0x000008f8   0x0000000c   Code   RO         1154    .text.OS_Tick_AcknowledgeIRQ  RTX_CM0.lib(os_systick.o)
    0x00000904   0x00000904   0x0000002c   Code   RO         1150    .text.OS_Tick_Enable  RTX_CM0.lib(os_systick.o)
    0x00000930   0x00000930   0x0000004c   Code   RO         1148    .text.OS_Tick_Setup  RTX_CM0.lib(os_systick.o)
    0x0000097c   0x0000097c   0x00000024   Code   RO          941    .text.SemaphoreTokenDecrement  RTX_CM0.lib(rtx_semaphore.o)
    0x000009a0   0x000009a0   0x00000026   Code   RO          947    .text.SemaphoreTokenIncrement  RTX_CM0.lib(rtx_semaphore.o)
    0x000009c6   0x000009c6   0x0000004e   Code   RO          818    .text.ThreadFlagsCheck  RTX_CM0.lib(rtx_thread.o)
    0x00000a14   0x00000a14   0x0000004c   Code   RO         1040    .text.TimerInsert   RTX_CM0.lib(rtx_timer.o)
    0x00000a60   0x00000a60   0x00000028   Code   RO          871    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x00000a88   0x00000a88   0x00000030   Code   RO          681    .text.osKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x00000ab8   0x00000ab8   0x00000028   Code   RO          675    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x00000ae0   0x00000ae0   0x00000024   Code   RO          685    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x00000b04   0x00000b04   0x00000074   Code   RO          968    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000b78   0x00000b78   0x00000024   Code   RO          962    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000b9c   0x00000b9c   0x00000078   Code   RO          966    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000c14   0x00000c14   0x00000028   Code   RO          894    .text.osMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00000c3c   0x00000c3c   0x00000028   Code   RO          900    .text.osMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00000c64   0x00000c64   0x00000024   Code   RO          890    .text.osMutexNew    RTX_CM0.lib(rtx_mutex.o)
    0x00000c88   0x00000c88   0x00000028   Code   RO          896    .text.osMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00000cb0   0x00000cb0   0x00000002   Code   RO          673    .text.osRtxKernelPreInit  RTX_CM0.lib(rtx_kernel.o)
    0x00000cb2   0x00000cb2   0x0000007c   Code   RO         1067    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x00000d2e   0x00000d2e   0x0000004e   Code   RO         1069    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x00000d7c   0x00000d7c   0x00000032   Code   RO         1065    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x00000dae   0x00000dae   0x0000002e   Code   RO         1082    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x00000ddc   0x00000ddc   0x0000003a   Code   RO         1084    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x00000e16   0x00000e16   0x0000003e   Code   RO         1080    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x00000e54   0x00000e54   0x000000bc   Code   RO          992    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x00000f10   0x00000f10   0x00000044   Code   RO          888    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00000f54   0x00000f54   0x00000080   Code   RO         1135    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x00000fd4   0x00000fd4   0x0000006c   Code   RO         1137    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x00001040   0x00001040   0x00000024   Code   RO          939    .text.osRtxSemaphorePostProcess  RTX_CM0.lib(rtx_semaphore.o)
    0x00001064   0x00001064   0x00000038   Code   RO          758    .text.osRtxThreadBlock  RTX_CM0.lib(rtx_thread.o)
    0x0000109c   0x0000109c   0x00000080   Code   RO          766    .text.osRtxThreadDelayInsert  RTX_CM0.lib(rtx_thread.o)
    0x0000111c   0x0000111c   0x00000044   Code   RO          762    .text.osRtxThreadDelayRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001160   0x00001160   0x00000038   Code   RO          748    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x00001198   0x00001198   0x00000050   Code   RO          756    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x000011e8   0x000011e8   0x00000054   Code   RO          842    .text.osRtxThreadFree  RTX_CM0.lib(rtx_thread.o)
    0x0000123c   0x0000123c   0x00000014   Code   RO          740    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x00001250   0x00001250   0x0000002c   Code   RO          738    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x0000127c   0x0000127c   0x00000018   Code   RO          744    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x00001294   0x00001294   0x00000026   Code   RO          742    .text.osRtxThreadListSort  RTX_CM0.lib(rtx_thread.o)
    0x000012ba   0x000012ba   0x00000026   Code   RO          816    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x000012e0   0x000012e0   0x00000018   Code   RO          746    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x000012f8   0x000012f8   0x00000006   Code   RO          750    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x000012fe   0x000012fe   0x00000002   PAD
    0x00001300   0x00001300   0x0000002c   Code   RO          754    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x0000132c   0x0000132c   0x00000040   Code   RO          768    .text.osRtxThreadStartup  RTX_CM0.lib(rtx_thread.o)
    0x0000136c   0x0000136c   0x00000014   Code   RO          752    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x00001380   0x00001380   0x0000003c   Code   RO          764    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x000013bc   0x000013bc   0x00000022   Code   RO          760    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x000013de   0x000013de   0x00000002   PAD
    0x000013e0   0x000013e0   0x00000074   Code   RO         1133    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x00001454   0x00001454   0x0000003c   Code   RO         1024    .text.osRtxTimerThread  RTX_CM0.lib(rtx_timer.o)
    0x00001490   0x00001490   0x00000060   Code   RO         1026    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x000014f0   0x000014f0   0x00000044   Code   RO          927    .text.osSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x00001534   0x00001534   0x00000024   Code   RO          923    .text.osSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x00001558   0x00001558   0x0000004c   Code   RO          929    .text.osSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x000015a4   0x000015a4   0x0000000c   Code   RO          800    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x000015b0   0x000015b0   0x00000024   Code   RO          772    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x000015d4   0x000015d4   0x00000012   Code   RO          875    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x000015e6   0x000015e6   0x00000002   PAD
    0x000015e8   0x000015e8   0x0000000c   Code   RO          683    .text.svcRtxKernelGetState  RTX_CM0.lib(rtx_kernel.o)
    0x000015f4   0x000015f4   0x00000148   Code   RO          713    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x0000173c   0x0000173c   0x00000084   Code   RO          715    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x000017c0   0x000017c0   0x000000e8   Code   RO         1004    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x000018a8   0x000018a8   0x000001e4   Code   RO          990    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001a8c   0x00001a8c   0x000000bc   Code   RO         1000    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x00001b48   0x00001b48   0x00000098   Code   RO          906    .text.svcRtxMutexAcquire  RTX_CM0.lib(rtx_mutex.o)
    0x00001be0   0x00001be0   0x000000bc   Code   RO          912    .text.svcRtxMutexDelete  RTX_CM0.lib(rtx_mutex.o)
    0x00001c9c   0x00001c9c   0x00000070   Code   RO          902    .text.svcRtxMutexNew  RTX_CM0.lib(rtx_mutex.o)
    0x00001d0c   0x00001d0c   0x000000c0   Code   RO          908    .text.svcRtxMutexRelease  RTX_CM0.lib(rtx_mutex.o)
    0x00001dcc   0x00001dcc   0x0000004c   Code   RO          945    .text.svcRtxSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x00001e18   0x00001e18   0x00000088   Code   RO          937    .text.svcRtxSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x00001ea0   0x00001ea0   0x00000038   Code   RO          949    .text.svcRtxSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x00001ed8   0x00001ed8   0x0000006c   Code   RO          846    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x00001f44   0x00001f44   0x000001ec   Code   RO          770    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x00002130   0x00002130   0x00000030   Code   RO          285    i.PIT_IRQHandler    ultrasound.o
    0x00002160   0x00002160   0x00000190   Code   RO          642    i.SystemCoreClockUpdate  system_mkl25z4.o
    0x000022f0   0x000022f0   0x0000000c   Code   RO          643    i.SystemInit        system_mkl25z4.o
    0x000022fc   0x000022fc   0x00000038   Code   RO          286    i.TPM2_IRQHandler   ultrasound.o
    0x00002334   0x00002334   0x00000018   Code   RO          144    i.UART2_Receive_Poll  uart.o
    0x0000234c   0x0000234c   0x0000001c   Code   RO          621    i.__ARM_common_switch8  rtx_config.o
    0x00002368   0x00002368   0x00000018   Code   RO          287    i.__NVIC_ClearPendingIRQ  ultrasound.o
    0x00002380   0x00002380   0x00000020   Code   RO          289    i.__NVIC_EnableIRQ  ultrasound.o
    0x000023a0   0x000023a0   0x00000078   Code   RO          290    i.__NVIC_SetPriority  ultrasound.o
    0x00002418   0x00002418   0x00000018   Code   RO          524    i._mutex_acquire    rtx_lib.o
    0x00002430   0x00002430   0x0000000c   Code   RO          525    i._mutex_free       rtx_lib.o
    0x0000243c   0x0000243c   0x00000024   Code   RO          526    i._mutex_initialize  rtx_lib.o
    0x00002460   0x00002460   0x00000014   Code   RO          527    i._mutex_release    rtx_lib.o
    0x00002474   0x00002474   0x00000008   Code   RO          528    i._platform_post_stackheap_init  rtx_lib.o
    0x0000247c   0x0000247c   0x00000120   Code   RO            3    i.auto_obstacle_avoid  main.o
    0x0000259c   0x0000259c   0x0000010c   Code   RO            4    i.auto_thread       main.o
    0x000026a8   0x000026a8   0x0000006c   Code   RO          193    i.calc_left         motor.o
    0x00002714   0x00002714   0x0000006c   Code   RO          194    i.calc_left_back    motor.o
    0x00002780   0x00002780   0x0000006c   Code   RO          195    i.calc_right        motor.o
    0x000027ec   0x000027ec   0x0000006c   Code   RO          196    i.calc_right_back   motor.o
    0x00002858   0x00002858   0x00000014   Code   RO          291    i.clearTIF          ultrasound.o
    0x0000286c   0x0000286c   0x00000034   Code   RO          197    i.create_motor_cmd  motor.o
    0x000028a0   0x000028a0   0x00000038   Code   RO          294    i.getDistance       ultrasound.o
    0x000028d8   0x000028d8   0x0000000c   Code   RO          295    i.getTPMC1Value     ultrasound.o
    0x000028e4   0x000028e4   0x00000032   Code   RO            6    i.get_level         main.o
    0x00002916   0x00002916   0x00000002   PAD
    0x00002918   0x00002918   0x00000020   Code   RO          199    i.get_move_state    motor.o
    0x00002938   0x00002938   0x00000018   Code   RO            7    i.greenLED_thread   main.o
    0x00002950   0x00002950   0x00000070   Code   RO          470    i.greenLedMove      led.o
    0x000029c0   0x000029c0   0x00000024   Code   RO          471    i.greenLedStop      led.o
    0x000029e4   0x000029e4   0x00000140   Code   RO            8    i.handle_UART       main.o
    0x00002b24   0x00002b24   0x00000008   Code   RO          297    i.initEcho          ultrasound.o
    0x00002b2c   0x00002b2c   0x00000144   Code   RO          472    i.initGreenLED      led.o
    0x00002c70   0x00002c70   0x00000150   Code   RO          200    i.initMotor         motor.o
    0x00002dc0   0x00002dc0   0x000000a4   Code   RO          298    i.initPIT           ultrasound.o
    0x00002e64   0x00002e64   0x000000ec   Code   RO          299    i.initTPM2          ultrasound.o
    0x00002f50   0x00002f50   0x00000044   Code   RO          300    i.initTrigger       ultrasound.o
    0x00002f94   0x00002f94   0x00000080   Code   RO          145    i.initUART2         uart.o
    0x00003014   0x00003014   0x0000000c   Code   RO          301    i.initUltrasound    ultrasound.o
    0x00003020   0x00003020   0x0000003c   Code   RO          201    i.just_backward     motor.o
    0x0000305c   0x0000305c   0x00000038   Code   RO          202    i.just_forward      motor.o
    0x00003094   0x00003094   0x00000030   Code   RO          203    i.just_stop         motor.o
    0x000030c4   0x000030c4   0x00000048   Code   RO            9    i.just_stoppppp     main.o
    0x0000310c   0x0000310c   0x000000b0   Code   RO           10    i.main              main.o
    0x000031bc   0x000031bc   0x00000040   Code   RO           11    i.motor_thread      main.o
    0x000031fc   0x000031fc   0x00000020   Code   RO          600    i.osRtxErrorNotify  rtx_config.o
    0x0000321c   0x0000321c   0x00000004   Code   RO          601    i.osRtxIdleThread   rtx_config.o
    0x00003220   0x00003220   0x00000024   Code   RO          529    i.os_kernel_is_active  rtx_lib.o
    0x00003244   0x00003244   0x0000000c   Code   RO          304    i.resetTPM2         ultrasound.o
    0x00003250   0x00003250   0x00000158   Code   RO          204    i.set_motors        motor.o
    0x000033a8   0x000033a8   0x0000002c   Code   RO          305    i.startMeasure      ultrasound.o
    0x000033d4   0x000033d4   0x00000014   Code   RO          306    i.startTPM2         ultrasound.o
    0x000033e8   0x000033e8   0x00000008   Code   RO          307    i.startUltrasound   ultrasound.o
    0x000033f0   0x000033f0   0x00000014   Code   RO          308    i.stopTPM2          ultrasound.o
    0x00003404   0x00003404   0x0000002c   Code   RO          310    i.timeToDistance    ultrasound.o
    0x00003430   0x00003430   0x00000014   Code   RO          173    i.util_delay        utils.o
    0x00003444   0x00003444   0x00000000   Code   RO         1202    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x00003444   0x00003444   0x000000b4   Data   RO           15    .constdata          main.o
    0x000034f8   0x000034f8   0x00000064   Data   RO          536    .constdata          rtx_lib.o
    0x0000355c   0x0000355c   0x00000001   Data   RO         1018    .constdata          RTX_CM0.lib(irq_cm0.o)
    0x0000355d   0x0000355d   0x00000003   PAD
    0x00003560   0x00003560   0x000000a0   Data   RO          538    .rodata             rtx_lib.o
    0x00003600   0x00003600   0x0000000b   Data   RO          727    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x0000360b   0x0000360b   0x00000001   PAD
    0x0000360c   0x0000360c   0x00000020   Data   RO         1361    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x1ffff000, Load base: 0x0000362c, Size: 0x0000147c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000054])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff000   COMPRESSED   0x00001040   Data   RW          530    .bss.os             rtx_lib.o
    0x20000040   COMPRESSED   0x00000034   Data   RW          532    .bss.os.msgqueue.cb  rtx_lib.o
    0x20000074   COMPRESSED   0x00000050   Data   RW          533    .bss.os.msgqueue.mem  rtx_lib.o
    0x200000c4   COMPRESSED   0x00000088   Data   RW          534    .bss.os.thread.cb   rtx_lib.o
    0x2000014c   COMPRESSED   0x00000004   PAD
    0x20000150   COMPRESSED   0x00000200   Data   RW          535    .bss.os.thread.stack  rtx_lib.o
    0x20000350   COMPRESSED   0x0000002c   Data   RW           16    .data               main.o
    0x2000037c   COMPRESSED   0x00000014   Data   RW          205    .data               motor.o
    0x20000390   COMPRESSED   0x00000010   Data   RW          311    .data               ultrasound.o
    0x200003a0   COMPRESSED   0x0000002c   Data   RW          476    .data               led.o
    0x200003cc   COMPRESSED   0x00000005   Data   RW          537    .data               rtx_lib.o
    0x200003d1   COMPRESSED   0x00000003   PAD
    0x200003d4   COMPRESSED   0x00000004   Data   RW          644    .data               system_mkl25z4.o
    0x200003d8   COMPRESSED   0x000000a4   Data   RW          728    .data.os            RTX_CM0.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x2000047c, Load base: 0x00003680, Size: 0x00000164, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000047c        -       0x00000060   Zero   RW         1234    .bss                c_p.l(libspace.o)
    0x200004dc        -       0x00000001   Zero   RW         1166    .bss.PendST         RTX_CM0.lib(os_systick.o)
    0x200004dd   0x00003680   0x00000003   PAD
    0x200004e0        -       0x00000000   Zero   RW          631    HEAP                startup_mkl25z4.o
    0x200004e0        -       0x00000100   Zero   RW          630    STACK               startup_mkl25z4.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       472         44          0         44          0       1927   led.o
      1262        132        180         44          0     226567   main.o
      1360        252          0         20          0       6948   motor.o
        64          8          0          0          0       1009   rtx_config.o
       136          6        260       4945          0      12846   rtx_lib.o
        80         44        192          0        256        852   startup_mkl25z4.o
       412         42          0          4          0       1467   system_mkl25z4.o
       152         16          0          0          0        933   uart.o
      1004        128          0         16          0      16599   ultrasound.o
        20          0          0          0          0        833   utils.o

    ----------------------------------------------------------------------
      4964        672        664       5080        256     269981   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          0          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       164          8          1          0          0        496   irq_cm0.o
       138         32          0          0          1       2766   os_systick.o
        58          4          0          0          0       2753   rtx_delay.o
       598         48         11        164          0      16105   rtx_kernel.o
       252          0          0          0          0       2564   rtx_memory.o
       166          0          0          0          0      14282   rtx_mempool.o
      1568         44          0          0          0      17889   rtx_msgqueue.o
       868         32          0          0          0       9201   rtx_mutex.o
       558         28          0          0          0      10054   rtx_semaphore.o
       352         26          0          0          0       4635   rtx_system.o
      1614         96          0          0          0      30867   rtx_thread.o
       232         20          0          0          0      10018   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
       346          0          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        72          4          0          0          0         68   dfixui.o
        88          0          0          0          0         92   dflti.o
       584         26          0          0          0         84   dmul.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      8224        384         16        164        100     122766   Library Totals
        10          0          4          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6568        338         12        164          1     121630   RTX_CM0.lib
       902         16          0          0         96        892   c_p.l
       744         30          0          0          0        244   fz_ps.l

    ----------------------------------------------------------------------
      8224        384         16        164        100     122766   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13188       1056        680       5244        356     389879   Grand Totals
     13188       1056        680         84        356     389879   ELF Image Totals (compressed)
     13188       1056        680         84          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13868 (  13.54kB)
    Total RW  Size (RW Data + ZI Data)              5600 (   5.47kB)
    Total ROM Size (Code + RO Data + RW Data)      13952 (  13.63kB)

==============================================================================

